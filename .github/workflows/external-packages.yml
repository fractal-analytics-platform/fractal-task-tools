name: External packages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # workflow_dispatch:
  # schedule:
  #   - cron: "0 23 * * 2,3,4"


jobs:
  test-manifest:
    runs-on: ubuntu-22.04
    strategy:
      # Do not make the whole matrix fail if one element fails
      fail-fast: false
      matrix:
        package: [skip]
        github_repo: [skip]
        github_branch: [skip]
        cmd_install: [skip]
        manifest_path: [skip]
        cmd_create_manifest: [skip]

        include:

          - package: fractal-tasks-core
            github_repo: fractal-analytics-platform/fractal-tasks-core
            github_branch: test-new-manifest-tools
            cmd_install: 'python -m pip install -e .[fractal-tasks] ./fractal-task-tools'
            manifest_path: fractal_tasks_core/__FRACTAL_MANIFEST__.json

          - package: scMultipleX
            github_repo: tcompa/gliberal-scMultipleX
            github_branch: main
            cmd_install: 'python -m pip install -e .[fractal-tasks,spherical-harmonics] ./fractal-task-tools'
            manifest_path: src/scmultiplex/__FRACTAL_MANIFEST__.json

          - package: fractal-helper-tasks
            github_repo: tcompa/fractal-helper-tasks
            github_branch: main
            cmd_install: 'python -m pip install -e . ./fractal-task-tools'
            manifest_path: src/fractal_helper_tasks/__FRACTAL_MANIFEST__.json

          - package: APx_fractal_task_collection
            github_repo: tcompa/APx_fractal_task_collection
            github_branch: main
            cmd_install: 'python -m pip install -e . ./fractal-task-tools'
            manifest_path: src/apx_fractal_task_collection/__FRACTAL_MANIFEST__.json

        exclude:
          - package: skip
            github_repo: skip
            github_branch: skip
            cmd_install: skip
            manifest_path: skip
            cmd_create_manifest: skip

    steps:

      - name: Print matrix-element information
        run: echo '${{ matrix.package }}, ${{ matrix.github_repo }}, ${{ matrix.cmd_install }}, ${{ matrix.cmd_create_manifest }}, ${{ matrix.manifest_path }}'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Update pip
        run:  python -m pip install --upgrade pip

      - name: Get package source code
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.github_repo }}
          ref: ${{ matrix.github_branch }}
          persist-credentials: false

      - name: Get current branch of `fractal-task-tools`
        uses: actions/checkout@v4
        with:
          path: fractal-task-tools
          persist-credentials: false

      - name: Install package
        run:  ${{ matrix.cmd_install }}

      - name: Create manifest
        run: fractal-manifest create --package ${{ matrix.package }}

      - name: Setup friendly diff style
        run: echo "*.json diff=json" >> .gitattributes && git config diff.json.textconv "jq --sort-keys '.' \$1"

      - name: Run git diff for manifest
        run: git diff ${{ matrix.manifest_path }}

      - name: Clean up before checking repo status
        run: rm -rf fractal-task-tools .gitattributes

      - name: Check repo status
        run: if [[ -z $(git status -s) ]]; then echo "Clean status"; else echo "Dirty status"; git status; exit 1; fi
